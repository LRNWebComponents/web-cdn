---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  Environment:
    Type: String
    Description: Deployment environment
    Default: dev
    AllowedValues:
      - dev
      - prod
Mappings:
  Bucket:
    prod:
      name: cdn.byu.edu
    dev:
      name: byu-web-community-cdn-dev
  DNSSubdomainMap:
    prod:
      root: cdn.byu.edu.
      alias: cdn.byu.edu
    dev:
      root: dev.cdn.byu.edu.
      alias: dev.cdn.byu.edu
Resources:
  ContentBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !FindInMap [Bucket, !Ref Environment, name]
      CorsConfiguration:
        CorsRules:
        - Id: AllowAllGets
          AllowedHeaders: ['*']
          AllowedMethods: [GET]
          AllowedOrigins: ['*']
          ExposedHeaders: [Date]
          MaxAge: '3600'
      WebsiteConfiguration:
        IndexDocument: index.html
      Tags:
      - Key: Name
        Value: !Join [ " ", [ !FindInMap [ Bucket, !Ref Environment, name ], Web Community CDN Bucket ] ]
      - Key: team
        # This isn't necessarily accurate, but it's the best group I can find for it.
        Value: OIT_APP_DEV__STUDENT_LIFE_APPS
      - Key: env
        Value: !Ref Environment
      - Key: data-sensitivity
        Value: public
      - Key: app
        Value: Web Community CDN
  ContentBucketAllowUpdates:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ContentBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaExecuteCodePipelineEventServiceRole"
            Action:
              - s3:ListBucket
            Resource: !Sub "arn:aws:s3:::${ContentBucket}"
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaExecuteCodePipelineEventServiceRole"
            Action:
              - s3:*
            Resource: !Sub "arn:aws:s3:::${ContentBucket}/*"

  WebhookApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionUri: ./webhook-swagger.yml
      StageName: Prod
      Variables:
        GithubLambdaName: !Ref GithubHookFunction
    Tags:
      - Key: Name
        Value: !Join [ " ", [ !FindInMap [ Bucket, !Ref Environment, name ], Web Community CDN Webhook API ] ]
      - Key: team
        # This isn't necessarily accurate, but it's the best group I can find for it.
        Value: OIT_APP_DEV__STUDENT_LIFE_APPS
      - Key: env
        Value: !Ref Environment
      - Key: data-sensitivity
        Value: public
      - Key: app
        Value: Web Community CDN
    DependsOn: [GithubHookFunction]
  GithubHookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./../
      Handler: lambda/github-hook.handler
      Runtime: nodejs4.3
      MemorySize: 256
      Timeout: 60
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaExecuteCodePipelineEventServiceRole"
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref WebhookApi
            Path: /github
            Method: POST
    Tags:
      - Key: Name
        Value: !Join [ " ", [ !FindInMap [ Bucket, !Ref Environment, name ], Web Community CDN Github Webhook Receiver ] ]
      - Key: team
        # This isn't necessarily accurate, but it's the best group I can find for it.
        Value: OIT_APP_DEV__STUDENT_LIFE_APPS
      - Key: env
        Value: !Ref Environment
      - Key: data-sensitivity
        Value: public
      - Key: app
        Value: Web Community CDN
Outputs:
  ContentBucket:
    Value:
      Ref: ContentBucket
    Description: Name of S3 bucket to hold website content
    Export:
      Name: !Sub "${AWS::StackName}-ContentBucket"
  ContentBucketDomain:
    Value: !GetAtt ContentBucket.DomainName
    Description: Domain name of the content S3 bucket
    Export:
      Name: !Sub "${AWS::StackName}-ContentBucketDomain"
  WebhookApiConsole:
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/apigateway/home?region=${AWS::Region}#/apis/${WebhookApi}/resources"
    Description: URL of the Webhook API Console


