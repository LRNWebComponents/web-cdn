---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Environment:
    Type: String
    Description: Deployment environment
    Default: dev
    AllowedValues:
      - dev
      - stg
      - prod
  RolesStackName:
    Type: String
    Description: CFN stack name of the Roles stack
    Default: web-community-cdn-roles
Resources:
  ContentBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !Sub "web-community-cdn-contents-${Environment}"
      CorsConfiguration:
        CorsRules:
        - Id: AllowAllGets
          AllowedHeaders: ['*']
          AllowedMethods: [GET]
          AllowedOrigins: ['*']
          ExposedHeaders: [Date]
          MaxAge: '3600'
      WebsiteConfiguration:
        IndexDocument: index.html
      Tags:
      - Key: Name
        Value: !Sub "Web Community CDN ${Environment} Contents"
      - Key: team
        # This isn't necessarily accurate, but it's the best group I can find for it.
        Value: OIT_APP_DEV__STUDENT_LIFE_APPS
      - Key: env
        Value: !Ref Environment
      - Key: data-sensitivity
        Value: public
      - Key: app
        Value: Web Community CDN

  ContentBucketAllowBuilderUpdates:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ContentBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                Fn::ImportValue: !Sub "${RolesStackName}-BuilderRole"
            Action:
              - s3:ListBucket
              - s3:PutBucketWebsite
              - s3:Get*
            Resource: !Sub "arn:aws:s3:::${ContentBucket}"
          - Effect: Allow
            Principal:
              AWS:
                Fn::ImportValue: !Sub "${RolesStackName}-BuilderRole"
            Action:
              - s3:*
            Resource: !Sub "arn:aws:s3:::${ContentBucket}/*"

Outputs:
  ContentBucket:
    Value:
      Ref: ContentBucket
    Description: Name of S3 bucket to hold website content
    Export:
      Name: !Sub "${AWS::StackName}-ContentBucket"
  ContentBucketDomain:
    Value: !GetAtt ContentBucket.DomainName
    Export:
      Name: !Sub "${AWS::StackName}-ContentBucketDomain"
  ContentBucketWebsite:
    Value: !GetAtt ContentBucket.WebsiteURL
    Export:
      Name: !Sub "${AWS::StackName}-ContentBucketWebsite"
  ContentBucketWebsiteDomain:
    Value: !Select [ 1, !Split [ "://", !GetAtt ContentBucket.WebsiteURL ] ]
    Export:
      Name: !Sub "${AWS::StackName}-ContentBucketWebsiteDomain"


