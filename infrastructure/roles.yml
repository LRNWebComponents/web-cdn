---
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  AllowCloudFrontInvalidation:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AllowCloudFrontInvalidation
      Roles:
        - !Ref CdnBuilderRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudfront:CreateInvalidation
              - cloudfront:GetInvalidation
              - cloudfront:ListInvalidations
            Resource: "*"
  AllowCdnParameterStoreAccess:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AllowCdnParameterStoreAcccess
      Roles:
        - !Ref CdnBuilderRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ssm:DescribeParameters
              - ssm:GetParameters
            Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/web-community-cdn.*"

  CdnBuilderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/CloudFrontReadOnlyAccess"
        - "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
      Policies:
        - PolicyName: "AllowAssemblerImageAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:GetRepositoryPolicy"
                  - "ecr:DescribeRepositories"
                  - "ecr:ListImages"
                  - "ecr:DescribeImages"
                  - "ecr:BatchGetImage"
                Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/web-community-cdn-assembler"

  CdnBuildInvokerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "AllowBuildInvocation"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "codepipeline:StartPipelineExecution"
                Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:web-community-cdn-*-assembler-pipeline"

Outputs:
  AllowCloudFrontInvalidationPolicy:
    Description: ARN of the policy for allowing Cloud Front Invalidations
    Value: !Sub "arn:aws:iam::${AWS::AccountId}:policy/${AllowCloudFrontInvalidation}"
    Export:
      Name: !Sub "${AWS::StackName}-AllowCloudFrontInvalidationPolicy"
  BuilderRole:
    Description: ARN of the role for the CDN build process
    Value: !GetAtt CdnBuilderRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-BuilderRole"
  InvokerRole:
    Description: ARN of the role for the CDN build process
    Value: !GetAtt CdnBuildInvokerRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-InvokerRole"

