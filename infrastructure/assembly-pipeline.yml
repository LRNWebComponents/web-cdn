---
AWSTemplateFormatVersion: '2010-09-09'
#Transform: AWS::Serverless-2016-10-31
Parameters:
  Environment:
    Type: String
    Description: Deployment environment
    Default: dev
    AllowedValues:
      - dev
      - stg
      - prod
  RolesStackName:
    Type: String
    Description: CFN stack name of the Roles stack
    Default: web-community-cdn-roles
  HostingStackName:
    Type: String
    Description: CFN stack name of the hosting stack
  GithubOauthToken:
    Type: String
    NoEcho: true

Mappings:
  GithubBranch:
    prod:
      name: master
    stg:
      name: develop
    dev:
      name: aws-codebuild
  CdnHostMap:
    prod:
      root: cdn.byu.edu
    stg:
      root: stg.cdn.byu.edu
    dev:
      root: dev.cdn.byu.edu

Resources:
  CdnBuildPipelineArtifactStore:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
      Tags:
      - Key: Name
        Value: !Sub "Web Community CDN ${Environment} Assembly Artifacts"
      - Key: team
        # This isn't necessarily accurate, but it's the best group I can find for it.
        Value: OIT_APP_DEV__STUDENT_LIFE_APPS
      - Key: env
        Value: !Ref Environment
      - Key: data-sensitivity
        Value: public
      - Key: app
        Value: Web Community CDN

  CdnBuildPipelineArtifactStorePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CdnBuildPipelineArtifactStore
      PolicyDocument:
        Version: '2012-10-17'
        Id: SSEAndSSLPolicy
        Statement:
        - Sid: DenyUnEncryptedObjectUploads
          Effect: Deny
          Principal: "*"
          Action: s3:PutObject
          Resource: !Sub "arn:aws:s3:::${CdnBuildPipelineArtifactStore}/*"
          Condition:
            StringNotEquals:
              s3:x-amz-server-side-encryption: aws:kms
        - Sid: DenyInsecureConnections
          Effect: Deny
          Principal: "*"
          Action: s3:*
          Resource: !Sub "arn:aws:s3:::${CdnBuildPipelineArtifactStore}/*"
          Condition:
            Bool:
              aws:SecureTransport: 'false'
        - Effect: Allow
          Principal:
            AWS:
              Fn::ImportValue: !Sub "${RolesStackName}-BuilderRole"
          Action:
            - s3:*
          Resource: !Sub "arn:aws:s3:::${CdnBuildPipelineArtifactStore}/*"

  CdnBuildPipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: CdnBuildProject
    Properties:
      Name: !Sub "web-community-cdn-${Environment}-assembler-pipeline"
      ArtifactStore:
        Type: S3
        Location: !Ref CdnBuildPipelineArtifactStore
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-roles/CodePipelineService"
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: Source
              Configuration:
                Owner: byuweb
                Repo: web-cdn
                Branch: !FindInMap [GithubBranch, !Ref Environment, name]
                OAuthToken: !Ref GithubOauthToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: Source
              Configuration:
                ProjectName: !Ref CdnBuildProject
              RunOrder: 1

  CdnBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "web-community-cdn-${Environment}-assembler"
      Description: Assembles, builds, and deploys the contents of the BYU Web Community CDN
      Artifacts:
        Type: CODEPIPELINE
        Packaging: none
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/web-community-cdn-assembler:${Environment}"
        EnvironmentVariables:
          - Name: DESTINATION_S3_BUCKET
            Value:
              Fn::ImportValue: !Sub "${HostingStackName}-ContentBucket"
          - Name: BUILD_ENV
            Value: !Ref Environment
          - Name: CDN_HOST
            Value: !FindInMap [CdnHostMap, !Ref Environment, root]
      Source:
        Type: CODEPIPELINE
      ServiceRole:
        Fn::ImportValue: !Sub "${RolesStackName}-BuilderRole"
      Tags:
        - Key: Name
          Value: !Sub "Web Community CDN ${Environment} Assembler"
        - Key: team
          # This isn't necessarily accurate, but it's the best group I can find for it.
          Value: OIT_APP_DEV__STUDENT_LIFE_APPS
        - Key: env
          Value: !Ref Environment
        - Key: data-sensitivity
          Value: public
        - Key: app
          Value: Web Community CDN

Outputs:
  BuildPipeline:
    Value: !Ref CdnBuildPipeline
    Description: Name of the builder pipeline
    Export:
      Name: !Sub "${AWS::StackName}-BuildPipeline"


